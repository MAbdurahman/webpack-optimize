/*=============================================
          abstracts/_mixins.scss
================================================*/
@use './variables' as var;
@use './functions' as func;

//**************** align element ****************//
@mixin align-element($position: 'both') {
  @if ($position == 'horizontal') {
    left: 50%;
    right: auto;
    @include vendor-prefix-one(transform, translateX(-50%), webkit);

  } @else if ($position == 'vertical') {
    top: 50%;
    bottom: auto;
    @include vendor-prefix-one(transform, translateY(-50%), webkit);

  } @else {
    left: 50%;
    top: 50%;
    bottom: auto;
    right: auto;
    @include vendor-prefix-one(transform, translate(-50%, -50%), webkit);

  }
}

//**************** anchor-hover-effects ****************//
@mixin anchor-default($bg-color: var.$clr-neutral-300, $font-color: var.$clr-neutral-700) {
  position: relative;
  display: inline-block;
  padding: 8px 16px;
  font-family: var.$ff-primary-font;
  color: $font-color;
  background-color: $bg-color;
  cursor: pointer;
  transition: all 0.5s ease-in-out;
  &:hover,
  &:focus {
    cursor: pointer;
    color: func.set-neutral-color(var.$clr-neutral-200);
    background-color: darken($bg-color, 50%);
  }

}

@mixin anchor-default-outline($bg-color: transparent, $font-color: var.$clr-neutral-100) {
  position: relative;
  display: inline-block;
  padding: 8px 16px;
  font-family: var.$ff-primary-font;
  color: $font-color;
  background-color: $bg-color;

  cursor: pointer;
  transition: all 0.5s ease-in-out;
  &:hover,
  &:focus {
    cursor: pointer;
    color: func.set-neutral-color(var.$clr-neutral-200);
    background-color: $bg-color;
  }
}

@mixin anchor-underline-hover-effect($clr: var.$clr-neutral-100) {
  position: relative;
  display: inline-block;
  padding-bottom: 0.25em;
  text-decoration: none;
  color: $clr;

  &::before {
    content: '';
    position: absolute;
    right: 0;
    bottom: 0;
    width: 0;
    height: 2px;
    background-color: $clr;
    transition: width 0.25s ease-in-out;
  }

  &:hover::before {
    width: 100%;
    left: 0;
    right: auto;
  }
}

@mixin anchor-one-styles {
  @include anchor-default();

}

@mixin anchor-two-styles {
  @include anchor-default(func.set-neutral-color(var.$clr-neutral-500));
  @include background-transition-basic(func.set-neutral-color(var.$clr-neutral-600), func.set-neutral-color(var.$clr-neutral-500));
}

@mixin anchor-three-styles {
  @include anchor-default(func.set-neutral-color(var.$clr-neutral-400));
  @include background-transition-basic(func.set-neutral-color(var.$clr-neutral-500), func.set-neutral-color(var.$clr-neutral-400), true);
}

@mixin anchor-four-styles {
  @include anchor-default(func.set-neutral-color(var.$clr-neutral-500));
  @include background-transition-skew(func.set-neutral-color(var.$clr-neutral-300), func.set-neutral-color(var.$clr-neutral-500), true);
}

@mixin anchor-outline-styles {
  @include anchor-default-outline(transparent, var.$clr-neutral-100);

}

//**************** background transitions ****************//
@mixin background-transition-basic($initial, $hover, $inverted: false) {
  background: linear-gradient(
                  90deg,
                  $hover 0%,
                  $hover 50%,
                  $initial 50%,
                  $initial 100%
  );
  background-repeat: no-repeat;
  background-size: 200% 100%;

  background-position: right bottom;
  @if $inverted {
    background-position: left bottom;
  }
  transition: background-position 0.25s ease-out;

  &:hover {
    background-position: left bottom;
    @if $inverted {
      background-position: right bottom;
    }
  }
}

@mixin background-transition-skew($initial, $hover, $inverted: false) {
  background: linear-gradient(
                  -115deg,
                  $hover 0%,
                  $hover 50%,
                  $initial 50%,
                  $initial 100%
  );
  background-repeat: no-repeat;
  background-size: 225% 100%;

  background-position: right bottom;
  @if $inverted {
    background-position: left bottom;
  }
  transition: background-position 0.25s ease-out;

  &:hover {
    background-position: left bottom;
    @if $inverted {
      background-position: right bottom;
    }
  }
}

//**************** buttons ****************//
@mixin button-default($font: var.$ff-primary-font) {
  padding: 16px 32px;
  font-family: $font;
  font-size: medium;
  border: 1px solid func.set-neutral-color(var.$clr-neutral-300);
  outline: none;
  color: func.set-neutral-color(var.$clr-neutral-700);
  background-color: func.set-neutral-color(var.$clr-neutral-400);
  cursor: pointer;
  transition: all 0.5s ease-in-out;
  &:hover,
  &:focus {
    cursor: pointer;
    color: func.set-neutral-color(var.$clr-neutral-700);

  }
}

@mixin button-one-styles($background-color, $font-color) {
  padding: 16px 32px;
  border-radius: 0;
  outline: none;
  border: 1px solid $font-color;
  font-size: medium;
  background-color: $background-color;
  color: $font-color;
  cursor: pointer;
  transition: all 0.5s;
  &:hover {
    color: lighten($font-color, 80%);
    background: darken($background-color, 60%) radial-gradient(circle, transparent 1%, darken($background-color, 60%) 1%) center/15000%;
  }
  &:active {
    background-color: darken($background-color, 30%);
    background-size: 100%;
    transition: all 0s;
  }
}

@mixin button-two-styles() {
  @include button-default();
  @include background-transition-basic(func.set-neutral-color(var.$clr-neutral-700), func.set-neutral-color(var.$clr-neutral-400));

}

@mixin button-three-styles() {
  @include button-default();
  @include background-transition-basic(func.set-neutral-color(var.$clr-neutral-600), func.set-neutral-color(var.$clr-neutral-300), true);

}

@mixin button-four-styles() {
  @include button-default();
  @include background-transition-skew(func.set-neutral-color(var.$clr-neutral-700), func.set-neutral-color(var.$clr-neutral-500), true);

}

//**************** cards styles ****************//
@mixin card-default {

}





//**************** center position ****************//
@mixin center-position($position) {
  position: absolute;

  @if $position == 'vertical' {
    top: 50%;
    -webkit-transform: translateY(-50%);
    -ms-transform: translateY(-50%);
    transform: translateY(-50%);

  } @else if $position == 'horizontal' {
    left: 50%;
    -webkit-transform: translateX(-50%);
    -ms-transform: translateX(-50%);
    transform: translate(-50%);

  } @else if $position == 'both' {
    top: 50%;
    left: 50%;
    -webkit-transform: translate(-50%, -50%);
    -ms-transform: translate(-50%, -50%);
    transform: translate(-50%, -50%);

  }
}

//**************** flex mixins ****************//
@mixin enable-flex-center($direction: false) {
  display: flex;
  align-items: center;
  justify-content: center;
  @if $direction {
    flex-direction: column;
  }
}

@mixin flex-column {
  display: flex;
  flex-direction: column;
}

@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin flex-center-column {
  @include flex-center;
  flex-direction: column;
}

@mixin flex-center-vertical {
  display: flex;
  align-items: center;
}

@mixin flex-center-horizontal {
  display: flex;
  justify-content: center;
}

//**************** media-queries ****************//
@mixin responsive-max-width($max-width) {
  @media only screen and (max-width: $max-width) {
    @content;
  }

}

@mixin responsive-min-width($min-width) {
  @media only screen and (min-width: $min-width) {
    @content;
  }

}

//**************** vendor prefixes ****************//
@mixin vendor-prefix-one($property, $value, $vendors: webkit moz ms o) {
  @if $vendors {
    @each $vendor in $vendors {
      #{"-" + $vendor + "-" + $property}: #{$value};
    }
  }
  #{$property}: #{$value};
}

@mixin vendor-prefix-two($map, $vendors: webkit moz ms o) {
  @each $prop, $value in $map {
    @if $vendors {
      @each $vendor in $vendors {
        #{"-" + $vendor + "-" + $prop}: #{$value};
      }
    }
    // Dump regular property anyway
    #{$prop}: #{$value};
  }
}
